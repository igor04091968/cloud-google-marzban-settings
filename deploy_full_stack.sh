#!/bin/bash

# –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ
set -e

# ==============================================================================
# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---

# !!! –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –ù–û–í–û–ì–û, –ü–ï–†–ï–°–û–ë–†–ê–ù–ù–û–ì–û Docker-–æ–±—Ä–∞–∑–∞ !!!
DOCKER_IMAGE="YOUR_DOCKERHUB_USERNAME/YOUR_IMAGE_NAME:new-chisel"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è VDS
VDS_HOST="vds1.iri1968.dpdns.org"
VDS_USER="root"
CHISEL_SERVER_PORT="8444" # –ù–æ–≤—ã–π –ø–æ—Ä—Ç –¥–ª—è chisel-server

# ==============================================================================

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–∏–ª –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
if [ "$DOCKER_IMAGE" == "YOUR_DOCKERHUB_USERNAME/YOUR_IMAGE_NAME:new-chisel" ]; then
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "!!! –û–®–ò–ë–ö–ê: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç."
  echo "!!! –ó–∞–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π DOCKER_IMAGE –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –æ–±—Ä–∞–∑–∞."
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  exit 1
fi

# --- –®–∞–≥ 1: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ chisel-server –Ω–∞ VDS ---
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é chisel-server –Ω–∞ $VDS_HOST..."

echo "   - –ó–∞–≤–µ—Ä—à–∞—é —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã chisel-server (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
ssh $VDS_USER@$VDS_HOST "pkill -f 'chisel server' || true"

echo "   - –ó–∞–ø—É—Å–∫–∞—é –Ω–æ–≤—ã–π chisel-server –Ω–∞ –ø–æ—Ä—Ç—É $CHISEL_SERVER_PORT..."
ssh $VDS_USER@$VDS_HOST "nohup chisel server --port $CHISEL_SERVER_PORT --reverse > /dev/null 2>&1 &"

# –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É —Å–µ–∫—É–Ω–¥—É –Ω–∞ –∑–∞–ø—É—Å–∫
sleep 3

echo "   - –ü—Ä–æ–≤–µ—Ä—è—é, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω..."
ssh $VDS_USER@$VDS_HOST "ps aux | grep '[c]hisel server --port $CHISEL_SERVER_PORT'"
echo "‚úÖ chisel-server –Ω–∞ VDS –Ω–∞—Å—Ç—Ä–æ–µ–Ω."
echo ""


# --- –®–∞–≥ 2: –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Kubernetes ---
echo "üöÄ –ù–∞—á–∏–Ω–∞—é —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ x-ui –≤ Kubernetes..."
echo "   –ò—Å–ø–æ–ª—å–∑—É—é –æ–±—Ä–∞–∑: $DOCKER_IMAGE"
echo ""

echo "üìÑ –°–æ–∑–¥–∞—é Kubernetes Deployment..."
cat <<EOF | kubectl apply -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: x-ui-deployment
  labels:
    app: x-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: x-ui
  template:
    metadata:
      labels:
        app: x-ui
    spec:
      containers:
      - name: x-ui-container
        image: $DOCKER_IMAGE
        ports:
        - containerPort: 2053
EOF
echo "‚úÖ Deployment —Å–æ–∑–¥–∞–Ω."
echo ""

echo "üåê –°–æ–∑–¥–∞—é Kubernetes Service..."
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Service
metadata:
  name: x-ui-service
spec:
  type: NodePort
  selector:
    app: x-ui
  ports:
    - protocol: TCP
      port: 2053
      targetPort: 2053
EOF
echo "‚úÖ Service —Å–æ–∑–¥–∞–Ω."
echo ""

echo "‚è≥ –û–∂–∏–¥–∞—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
kubectl rollout status deployment/x-ui-deployment --timeout=120s
echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""

# --- –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ ---
echo "üîé –ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞..."
NODE_PORT=$(kubectl get service x-ui-service -o jsonpath='{.spec.ports[0].nodePort}')
NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')

echo "üéâ --- –£–°–ü–ï–•! --- üéâ"
echo "–í–∞—à —Å–µ—Ä–≤–∏—Å x-ui —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤ Kubernetes, —Ç—É–Ω–Ω–µ–ª—å –∫ VDS –Ω–∞—Å—Ç—Ä–æ–µ–Ω."
echo "   IP-–∞–¥—Ä–µ—Å —É–∑–ª–∞ (Node IP): $NODE_IP"
echo "   –í–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç (NodePort):  $NODE_PORT"
echo "   ‚û°Ô∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://$NODE_IP:$NODE_PORT"
echo "----------------------------------------------------------------------"
